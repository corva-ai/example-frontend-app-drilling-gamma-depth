import{parse as n}from"query-string";import{getAuthToken as c}from"./clientStorage/index.js";import o from"socket.io-client";import t from"lodash/noop";var e=new RegExp("^/reports.*$"),r=n(window.location.search).subscriptions_url||process.env.REACT_APP_SUBSCRIPTIONS_URL||"https://subscriptions.qa.corva.ai";function i(n){return e.test(window.location.pathname)?t:n}function a(n,c){return"".concat(n.appInstanceId||c,":").concat(n.companyId,":").concat(n.userId,":").concat(n.collection)}function s(n,c){return"".concat(n.appInstanceId||c,":").concat(n.companyId,":").concat(n.collection)}function u(n,c){return n.event?"".concat(n.appInstanceId||c,":").concat(n.provider,":").concat(n.collection,":").concat(n.assetId,":").concat(n.event):"".concat(n.appInstanceId||c,":").concat(n.provider,":").concat(n.collection,":").concat(n.assetId)}function d(n){var c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return"userId"in n?a(n,c):"companyId"in n?s(n,c):u(n,c)}function p(){var n,t={},e=!1,a=i((function(c){if(!n)throw new Error("Not connected");var o=d(c);o in t&&(delete t[o],n.emit("unsubscribe",c))})),s=i((function(c){if(!n)throw new Error("Not connected");var o=d(c);t[o]=c,e&&n.emit("subscribe",c)}));return{connect:i((function(i){var u=i.onDataReceive,d=i.onResubscribe,p=!1;return(n=o(r,{transports:["websocket"]})).on("connect",(function(){n.emit("authenticate",{token:c()}),p&&(Object.values(t).forEach((function(n){a(n),s(n),d(n)})),p=!1)})),n.on("authenticated",(function(){e=!0,Object.values(t).forEach(s)})),n.on("data",u),n.on("disconnect",(function(c){"io server disconnect"===c&&(p=!0,n.connect())})),n.on("reconnect",(function(){p=!0})),n})),disconnect:i((function(){n&&(n.disconnect(),n=null)})),subscribe:s,unsubscribe:a}}var b=function(){var n=p(),c=n.connect,o=n.disconnect,e=n.subscribe,r=n.unsubscribe,i=c({onDataReceive:t,onResubscribe:t});window[Symbol.for("socket")]={subscribe:e,unsubscribe:r,disconnect:o,socket:i}};export{d as getSubscriptionId,p as getSubscriptionsClient,b as initializeSocketClient};
